"""
В этом блоке мы пройдем функции.
Проще говоря функция - это просто кусочек кода который мы будет запускать тогда, когда нам это понадобится
"""

"""
Почему нам нужны функции?
Допустим я хочу написать функцию для определения ожидаемого балла который ты получишь на ЕНТ (тесте),
Однако это довольно сложная функция, но к концу этого блока мы сможем создавать и не такое!
"""

"""
Перед тем как начат пользоваться функцией давай вспомним функции которые мы могли ранее видеть,

Функция "len" для определения длинны списка, мы его используем даже не понимая что это функция,
давай-ка как раз повторим его
"""


def my_len(some_list):
    """
    Создаем функцию с помощью def и даем ей имя, к примеру my_len,
    и в скобках указываем аргументы функции которые она принимает,
    в нашем случае это список some_list
    """
    elements_quantity = 0  # создаем переменную для подсчета длинны
    for element in some_list:  # создаем цикл, который пробежится по всем элементам списка
        elements_quantity += 1  # прибавляем 1 к счетчику за каждый элемент
    return elements_quantity  # возвращаем количество элементов в списке


my_list = [1, 2, 3, 4, 5]  # создаем список

print(my_len(my_list))  # узнаем его размер с помощью нашей функции
print(len(my_list))  # узнаем его размер с помощью стандартной функции

"""
Ура! у нас получилось написать нашу первую функцию, и еще очень полезную,
Давай добавим к нему условий, например пускай он считает количество четных элементов в списке
"""


def even_len(some_list: list):
    """
    Так же мы можем указывать какой тип данных мы ожидаем при запуске функции,
    что-бы пользователь понимал что от него ждут
    """
    elements_quantity = 0  # создаем переменную для подсчета длинны
    for element in some_list:  # создаем цикл, который пробежится по всем элементам списка
        if element % 2 == 0:  # если элемент четный (без остатка делится на 2)
            elements_quantity += 1  # прибавляем 1 к счетчику за четный элемент
    return elements_quantity  # возвращаем количество элементов в списке


print(even_len(my_list))  # узнаем количество четных элементов с помощью нашей функции

"""
P.S.: Как ты поняла этот код можно запускать сколько хочешь раз и когда только захочешь,
это существенно облегчает нам какие либо сложные подсчеты которые надо делать частенько
"""


"""
Ура теперь мы знаем что такое функции, по сути тема очень простая, особенно в python!

Так что вернемся к нашей главной цели, а именно, создадим функции для предсказания твоего балла по предмету на ЕНТ!
"""


def subject_expectation(subject: str, percents_of_knowledge: list, max_point: int = 20):
    """
    Тут мы создали функцию subject_expectation,
    с аргументами: subject, percents_of_knowledge, max_point,
    обрати внимание что max_point имеет значение по умолчанию, это мы задали написав "max_point = 20"
    """
    topics_qty = my_len(percents_of_knowledge)   # узнаем количество тем
    average = sum(topics_qty) // topics_qty  # узнаем средний процент по всем темам
    sq = 0  # создаем переменную для подсчета квадратичной разницы
    for percent in percents_of_knowledge:  # пробегаемся по всем процентам по темам
        sq += (percent - average) ** 2  # высчитываем квадратичную сумму
    sq = (sq // topics_qty - 1) ** 0.5  # заканчиваем расчет находя корень
    expectations = [
        ((average - sq) // 100) * max_point,  # твой минимальный балл
        (average // 100) * max_point,  # твой средний балл
        ((average + sq) // 100) * max_point,  # твой максимальный
    ]  # наши ожидания
    return {subject: expectations}  # возвращаем наши ожидания


history = subject_expectation("history", [70, 80, 90, 75], 20)  # записываем данные по истории
math_ed = subject_expectation("math_ed", [90, 70, 60, 75], 15)  # записываем данные по мат грамотности
liter_ed = subject_expectation("liter_ed", [60, 70, 60, 75], 15)  # записываем данные по грамотности чтения
mathematics = subject_expectation("mathematics", [80, 70, 60, 75], 45)  # записываем данные по математике
informatics = subject_expectation("informatics", [90, 70, 75, 75], 45)  # записываем данные по информатике

print(history)
print(math_ed)
print(liter_ed)
print(mathematics)
print(informatics)

summary = history["history"][1] + \
          math_ed["math_ed"][1] + \
          liter_ed["liter_ed"][1] + \
          mathematics["mathematics"][1] + \
          informatics["informatics"][1]

print("твой балл на ЕНТ:", summary)  # выводим ожидаемый итог
