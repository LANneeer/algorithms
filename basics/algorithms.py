"""
В этом блоке мы пройдем алгоритмы и узнаем зачем они нужны?
Если говорить по-простому, то алгоритм - это последовательность действий которому надо следовать,
что-бы добиться нашей конечной цели. Будь то приготовить яичницу или же вынести мусор
"""

"""
Пример на словах
1. Поставить сковородку на плиту
2. Включить огонь
3. Взять яйца
4. Разбить яйца в сковородку
5. Накрыть крышкой
6. Подождать 5 минут
7. Отключить огонь
Готово!
У нас есть яичница за 7 шагов, это называется алгоритм, когда мы следуем строго заданным инструкциям, 
для достижения конечной цели, в нашем случае это яичница.
Ты так же можешь дополнить алгоритм, например посолив яйца перед тем как накрыть крышкой,
ОДНАКО нельзя менять действия местами,
например ты не можешь сначала накрыть крышкой сковородку а уже потом разбить яйца в сковородку.

Давай приступим к примеру самого простого алгоритма, алгоритма сортировки!
Алгоритмы сортировки используются что-бы отсортировать список по его возрастанию.

Для чего нам это надо?

Например для того что-бы удобно понять кто набрал больше баллов на экзамене, а кто меньше
"""

my_list = [6, 3, 9, 0, 3, 2, 8]  # создаем список с разбросанными значениями


from sort.bubble import bubble_sort  # воспользуемся алгоритмом который я ранее написал в блоках основного проекта

print("До сортировки", my_list)  # наш список до сортировки  [6, 3, 9, 0, 3, 2, 8]

new_list = bubble_sort(my_list)  # применяем алгоритм сортировки

print("После сортировки", new_list)  # наш список после сортировки  [0, 2, 3, 3, 6, 8, 9]


"""
Еще больше алгоритмов можно будет найти в корне этого проекта
они удобно разделены на папки по типу алгоритма, и расписаны, однако они расписаны на английском, 
так что прийдется вооружиться переводчиком.
"""


"""
Давай ка разберем алгоритм сортировки в более понятном виде,
для этого я выписал нашу функцию

def bubble_sort(array: list) -> list:
    length = len(array)
    for i in range(length):
        for j in range(i, length):
            if array[i] > array[j]:
                array[i], array[j] = array[j], array[i]
    return array

Как видно мы берем для начала длину нашего списка, 
это нам нужно для того что-бы следующим шагом проходиться по списку,
далее мы создаем цикл где запускаем еще один цикл, 
а это нам нужно для того что-бы сравнивать каждый элемент списка с другими элементами, 
что-бы разложить их в нужном порядке, заметь что если мы поменяем местами некоторые строки,
тогда мы сломаем весь алгоритм.
"""

"""
В заключении можно сказать что алгоритмы это рецепт, для того что-бы приготовить очень вкусное блюдо.
Например: яичницу, яблочный пирог, бешбармак и конечно же красиво отсортированный список!
"""

"""
P.S.: 
В данном блоке мы опустили понятие Big O Notation(то есть временная сложность алгоритмов) и другие виды алгоритмов,
однако в текущим экспресс курсе я посчитал это не особо важным, если ты считаешь это не так, 
тогда я могу написать о них по подробнее ;)
"""


